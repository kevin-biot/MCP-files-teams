apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-server
spec:
  template:
    spec:
      initContainers:
        - name: init-ensure-chroma-v2
          image: curlimages/curl:8.6.0
          command: ["/bin/sh","-c"]
          args:
            - |
              set -e
              URL=${CHROMA_URL:-http://chroma-svc:8000}
              echo "Waiting for Chroma heartbeat at $URL/api/v2/heartbeat"
              for i in $(seq 1 60); do
                code=$(curl -s -o /dev/null -w '%{http_code}' "$URL/api/v2/heartbeat" || true)
                if [ "$code" = "200" ]; then echo "Chroma heartbeat OK"; break; fi
                echo "Heartbeat code=$code; retry $i"; sleep 2
              done
              echo "Ensuring tenant/database defaults exist"
              tcode=$(curl -s -o /dev/null -w '%{http_code}' -H 'Content-Type: application/json' -d '{"name":"default"}' "$URL/api/v2/tenants" || true)
              echo "Tenant ensure code=$tcode"
              dcode=$(curl -s -o /dev/null -w '%{http_code}' -H 'Content-Type: application/json' -d '{"name":"default"}' "$URL/api/v2/tenants/default/databases" || true)
              echo "Database ensure code=$dcode"
              echo "Ensuring collection via v2 tenant/db: $URL/api/v2/tenants/default/databases/default/collections"
              code=$(curl -s -o /dev/null -w '%{http_code}' -H 'Content-Type: application/json' -d '{"name":"llm_conversation_memory"}' "$URL/api/v2/tenants/default/databases/default/collections" || true)
              if [ "$code" = "200" ] || [ "$code" = "201" ] || [ "$code" = "409" ]; then echo "Collection ensured (code=$code)"; exit 0; fi
              echo "Collection ensure returned code=$code (continuing)"
              exit 0
          # No env needed; script defaults to CHROMA_URL or http://chroma-svc:8000
