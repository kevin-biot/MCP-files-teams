apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: chroma
  labels:
    app: chroma
spec:
  serviceName: chroma-svc
  replicas: 1
  selector:
    matchLabels:
      app: chroma
  template:
    metadata:
      labels:
        app: chroma
    spec:
      containers:
        - name: chroma
          image: chromadb/chroma:0.5.4
          imagePullPolicy: IfNotPresent
          env:
            - name: ANONYMIZED_TELEMETRY
              value: "False"
          command: ["/bin/sh","-c"]
          args: ["exec chroma run --host 127.0.0.1 --port 8000 --path /data"]
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - name: data
              mountPath: /data
          readinessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 20
            periodSeconds: 10
            failureThreshold: 6
          livenessProbe:
            tcpSocket:
              port: 8081
            initialDelaySeconds: 40
            periodSeconds: 20
            failureThreshold: 6
        - name: nginx-proxy
          image: nginx:1.25-alpine
          ports:
            - containerPort: 8081
              name: proxy
          volumeMounts:
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
          command: ["/bin/sh","-c"]
          args: ["nginx -g 'daemon off;' "]
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: chroma-data
        - name: nginx-conf
          configMap:
            name: chroma-nginx-proxy
